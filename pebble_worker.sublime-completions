{
	"scope": "source",
	"completions": [
		{"trigger": "watch_info_get_model", "contents": "watch_info_get_model(${1:void});"},
		{"trigger": "watch_info_get_firmware_version", "contents": "watch_info_get_firmware_version(${1:void});"},
		{"trigger": "watch_info_get_color", "contents": "watch_info_get_color(${1:void});"},
		{"trigger": "sin_lookup", "contents": "sin_lookup(${1:angle});"},
		{"trigger": "cos_lookup", "contents": "cos_lookup(${1:angle});"},
		{"trigger": "atan2_lookup", "contents": "atan2_lookup(${1:y},${2:x});"},
		{"trigger": "clock_copy_time_string", "contents": "clock_copy_time_string(${1:buffer},${2:size});"},
		{"trigger": "clock_is_24h_style", "contents": "clock_is_24h_style(${1:void});"},
		{"trigger": "clock_to_timestamp", "contents": "clock_to_timestamp(${1:day},${2:hour},${3:minute});"},
		{"trigger": "clock_is_timezone_set", "contents": "clock_is_timezone_set(${1:void});"},
		{"trigger": "bluetooth_connection_service_peek", "contents": "bluetooth_connection_service_peek(${1:void});"},
		{"trigger": "bluetooth_connection_service_subscribe", "contents": "bluetooth_connection_service_subscribe(${1:handler});"},
		{"trigger": "bluetooth_connection_service_unsubscribe", "contents": "bluetooth_connection_service_unsubscribe(${1:void});"},
		{"trigger": "battery_state_service_subscribe", "contents": "battery_state_service_subscribe(${1:handler});"},
		{"trigger": "battery_state_service_unsubscribe", "contents": "battery_state_service_unsubscribe(${1:void});"},
		{"trigger": "battery_state_service_peek", "contents": "battery_state_service_peek(${1:void});"},
		{"trigger": "accel_service_peek", "contents": "accel_service_peek(${1:data});"},
		{"trigger": "accel_service_set_sampling_rate", "contents": "accel_service_set_sampling_rate(${1:rate});"},
		{"trigger": "accel_service_set_samples_per_update", "contents": "accel_service_set_samples_per_update(${1:num_samples});"},
		{"trigger": "accel_data_service_subscribe", "contents": "accel_data_service_subscribe(${1:samples_per_update},${2:handler});"},
		{"trigger": "accel_data_service_unsubscribe", "contents": "accel_data_service_unsubscribe(${1:void});"},
		{"trigger": "accel_tap_service_subscribe", "contents": "accel_tap_service_subscribe(${1:handler});"},
		{"trigger": "accel_tap_service_unsubscribe", "contents": "accel_tap_service_unsubscribe(${1:void});"},
		{"trigger": "accel_raw_data_service_subscribe", "contents": "accel_raw_data_service_subscribe(${1:samples_per_update},${2:handler});"},
		{"trigger": "compass_service_set_heading_filter", "contents": "compass_service_set_heading_filter(${1:filter});"},
		{"trigger": "compass_service_subscribe", "contents": "compass_service_subscribe(${1:handler});"},
		{"trigger": "compass_service_unsubscribe", "contents": "compass_service_unsubscribe(${1:void});"},
		{"trigger": "compass_service_peek", "contents": "compass_service_peek(${1:data});"},
		{"trigger": "tick_timer_service_subscribe", "contents": "tick_timer_service_subscribe(${1:tick_units},${2:handler});"},
		{"trigger": "tick_timer_service_unsubscribe", "contents": "tick_timer_service_unsubscribe(${1:void});"},
		{"trigger": "data_logging_create", "contents": "data_logging_create(${1:tag},${2:item_type},${3:item_length},${4:resume});"},
		{"trigger": "data_logging_finish", "contents": "data_logging_finish(${1:logging_session});"},
		{"trigger": "data_logging_log", "contents": "data_logging_log(${1:logging_session},${2:data},${3:num_items});"},
		{"trigger": "uuid_equal", "contents": "uuid_equal(${1:uu1},${2:uu2});"},
		{"trigger": "uuid_to_string", "contents": "uuid_to_string(${1:uuid},${2:buffer});"},
		{"trigger": "dict_calc_buffer_size", "contents": "dict_calc_buffer_size(${1:tuple_count},${2:...});"},
		{"trigger": "dict_size", "contents": "dict_size(${1:iter});"},
		{"trigger": "dict_write_begin", "contents": "dict_write_begin(${1:iter},${2:buffer},${3:size});"},
		{"trigger": "dict_write_data", "contents": "dict_write_data(${1:iter},${2:key},${3:data},${4:size});"},
		{"trigger": "dict_write_cstring", "contents": "dict_write_cstring(${1:iter},${2:key},${3:cstring});"},
		{"trigger": "dict_write_int", "contents": "dict_write_int(${1:iter},${2:key},${3:integer},${4:width_bytes},${5:is_signed});"},
		{"trigger": "dict_write_uint8", "contents": "dict_write_uint8(${1:iter},${2:key},${3:value});"},
		{"trigger": "dict_write_uint16", "contents": "dict_write_uint16(${1:iter},${2:key},${3:value});"},
		{"trigger": "dict_write_uint32", "contents": "dict_write_uint32(${1:iter},${2:key},${3:value});"},
		{"trigger": "dict_write_int8", "contents": "dict_write_int8(${1:iter},${2:key},${3:value});"},
		{"trigger": "dict_write_int16", "contents": "dict_write_int16(${1:iter},${2:key},${3:value});"},
		{"trigger": "dict_write_int32", "contents": "dict_write_int32(${1:iter},${2:key},${3:value});"},
		{"trigger": "dict_write_end", "contents": "dict_write_end(${1:iter});"},
		{"trigger": "dict_serialize_tuplets", "contents": "dict_serialize_tuplets(${1:callback},${2:context},${3:tuplets},${4:tuplets_count});"},
		{"trigger": "dict_serialize_tuplets_to_buffer", "contents": "dict_serialize_tuplets_to_buffer(${1:tuplets},${2:tuplets_count},${3:buffer},${4:size_in_out});"},
		{"trigger": "dict_serialize_tuplets_to_buffer_with_iter", "contents": "dict_serialize_tuplets_to_buffer_with_iter(${1:iter},${2:tuplets},${3:tuplets_count},${4:buffer},${5:size_in_out});"},
		{"trigger": "dict_write_tuplet", "contents": "dict_write_tuplet(${1:iter},${2:tuplet});"},
		{"trigger": "dict_calc_buffer_size_from_tuplets", "contents": "dict_calc_buffer_size_from_tuplets(${1:tuplets},${2:tuplets_count});"},
		{"trigger": "dict_merge", "contents": "dict_merge(${1:dest},${2:dest_max_size_in_out},${3:source},${4:update_existing_keys_only},${5:key_callback},${6:context});"},
		{"trigger": "dict_find", "contents": "dict_find(${1:iter},${2:key});"},
		{"trigger": "worker_event_loop", "contents": "worker_event_loop(${1:void});"},
		{"trigger": "worker_launch_app", "contents": "worker_launch_app(${1:void});"},
		{"trigger": "app_worker_is_running", "contents": "app_worker_is_running(${1:void});"},
		{"trigger": "app_worker_launch", "contents": "app_worker_launch(${1:void});"},
		{"trigger": "app_worker_kill", "contents": "app_worker_kill(${1:void});"},
		{"trigger": "app_worker_message_subscribe", "contents": "app_worker_message_subscribe(${1:handler});"},
		{"trigger": "app_worker_message_unsubscribe", "contents": "app_worker_message_unsubscribe(${1:void});"},
		{"trigger": "app_worker_send_message", "contents": "app_worker_send_message(${1:type},${2:data});"},
		{"trigger": "psleep", "contents": "psleep(${1:millis});"},
		{"trigger": "app_timer_register", "contents": "app_timer_register(${1:timeout_ms},${2:callback},${3:callback_data});"},
		{"trigger": "app_timer_reschedule", "contents": "app_timer_reschedule(${1:timer_handle},${2:new_timeout_ms});"},
		{"trigger": "app_timer_cancel", "contents": "app_timer_cancel(${1:timer_handle});"},
		{"trigger": "heap_bytes_free", "contents": "heap_bytes_free(${1:void});"},
		{"trigger": "heap_bytes_used", "contents": "heap_bytes_used(${1:void});"},
		{"trigger": "persist_exists", "contents": "persist_exists(${1:key});"},
		{"trigger": "persist_get_size", "contents": "persist_get_size(${1:key});"},
		{"trigger": "persist_read_bool", "contents": "persist_read_bool(${1:key});"},
		{"trigger": "persist_read_int", "contents": "persist_read_int(${1:key});"},
		{"trigger": "persist_read_data", "contents": "persist_read_data(${1:key},${2:buffer},${3:buffer_size});"},
		{"trigger": "persist_read_string", "contents": "persist_read_string(${1:key},${2:buffer},${3:buffer_size});"},
		{"trigger": "persist_write_bool", "contents": "persist_write_bool(${1:key},${2:value});"},
		{"trigger": "persist_write_int", "contents": "persist_write_int(${1:key},${2:value});"},
		{"trigger": "persist_write_data", "contents": "persist_write_data(${1:key},${2:data},${3:size});"},
		{"trigger": "persist_write_string", "contents": "persist_write_string(${1:key},${2:cstring});"},
		{"trigger": "persist_delete", "contents": "persist_delete(${1:key});"},
		{"trigger": "time_ms", "contents": "time_ms(${1:tloc},${2:out_ms});"}
	]
}
